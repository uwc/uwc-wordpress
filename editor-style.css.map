{"version":3,"sources":["editor-style.scss","deps/_normalize.scss","config/_layout.scss","../../bower_components/typi/scss/typi/_typi.scss","config/_color.scss","config/_type.scss","deps/_reset.scss","config/_fonts.scss","../../bower_components/typi/scss/ty/_mixins.scss","../../bower_components/typi/scss/ty/_functions.scss","../../bower_components/modular-scale/stylesheets/modular-scale/_calc.scss","patterns/_wordpress.scss","../../bower_components/mappy-breakpoints/_mappy-breakpoints.scss","sections/_content.scss","config/_animation.scss"],"names":[],"mappings":"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AoB,AACpB,uBAAwB,AACxB,qBAAsB,AACtB,URhKe,AQiKf,WAAY,AACZ,cAAgB,CAGjB,AXjPD,kLWyPE,eAAgB,AAChB,WAAa,CACd,AX3PD,0BK0BI,mBK3Bc,CGRjB,AbSD,oDK2BI,gBA5BW,AA6BX,gBAAiB,AACjB,qBAAsB,AQzCxB,cTQiB,ASPjB,kBVuFe,AUtFf,mBVsFe,CH5EjB,AaDC,0BRiCG,kBKjCc,CGAjB,AbCD,0BKsCI,kBKvCc,ALwCd,gBAxCW,AAyCX,gBAAiB,AACjB,qBAAsB,AQrCxB,cTYwnB,ASXxnB,kBVuEe,AUtEf,mBVsEe,CUrEhB,AbPD,8EK4CI,iBK7Cc,AL8Cd,gBA9CW,AA+CX,gBAAiB,AACjB,qBAAsB,AQnCxB,cTIwnB,ASHxnB,iBV+De,AU9Df,mBV8De,CU7DhB,AbfD,yBakBE,iBV0De,AUzDf,mBVyDe,CUpDhB,AbxBD,6BasBI,cAAgB,CACjB,AbvBH,yBKkJE,kBAAmB,AACnB,UAAW,AACX,cD/IiB,ACgJjB,qBAAsB,AACtB,eAAgB,AAChB,qDAAA,ASlKyB,4CAAA,CDuC1B,Ab5BD,+BK0JI,WAAY,AACZ,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,SAAU,AACV,OAAQ,AACR,WAAY,AACZ,yBDjJ+Z,ACkJ/Z,kBAAmB,AACnB,kCAAA,AAAoB,8BAApB,AAAoB,0BAAA,AACpB,UAAW,AACX,4IAAA,AShLuB,oITgLvB,AShLuB,4HTgLvB,AShLuB,yKAAA,CTiLxB,ALtKH,8DK0KI,aD1J+Z,CC2Jha,AL3KH,0EK+KI,mBAAoB,AACpB,UAAW,AACX,mCAAA,AAAoB,+BAApB,AAAoB,0BAAA,CACrB,ALlLH,kCKkDI,iBKnDc,ALoDd,gBArDa,AAsDb,qBAAsB,AQnBxB,cTzBmB,AS0BnB,kBV0Ce,AUzCf,oBVyCe,CUdhB,Ab9DD,iFauCI,WAAY,AACZ,yBTxBwpB,ASyBxpB,aVmCa,AUlCb,WAAY,AACZ,cAAe,AACf,UAAY,CACb,Ab7CH,oCagDI,eAAgB,AAChB,aAAe,CAChB,AblDH,+EasDI,aAAe,CAChB,AbvDH,gHa4DI,iBAAmB,CACpB,Ab7DH,oDakEE,oBAAqB,AACrB,mBVSe,CURhB,AbpED,0BauEE,eAAiB,CAClB,AbxED,0Ba2EE,kBAAoB,CACrB,Ab5ED,0DagFE,gBAAkB,CACnB,AbjFD,0BaoFE,iBVRe,AUSf,mBVTe,CUUhB,AbtFD,0BayFE,eAAiB,CAClB,Ab1FD,0Ba6FE,iBVjBe,AUkBf,mBVlBe,CUmBhB,Ab/FD,2BakGE,YAAa,AAGb,qBAAuB,CACxB,AbtGD,gCayGE,UAAY,CACb,Ab1GD,iFa+GE,wBT/F0pB,CSgG3pB,AbhHD,0BamHE,wBTnG0oB,CSoG3oB,AbpHD,6BauHE,yBAA0B,AAC1B,iBAAkB,AAClB,yBAA0B,AAC1B,iBV9Ce,AU+Cf,oBV/Ce,AUgDf,mBAAoB,AAGpB,UAAY,CACb,AbhID,mFaqIE,gBAAoB,AACpB,eAAiB,CAClB,AbvID,0Ba0IE,yBAA0B,AAC1B,eAAiB,CAClB,Ab5ID,0Ba+IE,wBAA0B,CAC3B,AbhJD,oDaoJE,eAAkB,CACnB,ADtHC,qCZ/BF,uBEgBM,YAAa,AACb,kBAAmB,AACnB,iBAAkB,AAClB,sCAAA,AAAe,6BAAA,CFsBpB,CAAA","file":"editor-style.css","sourcesContent":["// ==== EDITOR STYLES ==== //\n\n// This stylesheet is loaded automatically by WordPress when compiled and placed in the root theme directory folder as editor-style.css.\n// For more info, check out the codex: http://codex.wordpress.org/Editor_Style\n\n// 1. Dependencies\n// 2. Configuration\n// 3. Patterns\n// 4. Sections\n\n// The order of the imports is crucial since they build on top of each other.\n// For example, a form contains buttons, a menu can contain a form, etc.\n// Note: `bower_components` and `npm_modules` are already in Sass's path.\n\n// Wrap the entire post style inside the TinyMCE selector, as suggested here http://codex.wordpress.org/Function_Reference/add_editor_style.\nbody#tinymce.wp-editor {\n  // 1. Dependencies //\n\n  // Modular scale calculator built into your Sass, from http://www.modularscale.com/.\n  @import \"modular-scale/stylesheets/modular-scale\";\n\n  // Typi: a sass mixin to make responsive typography easy, from https://github.com/zellwk/typi.\n  @import \"typi/scss/typi\";\n\n  // Mappy Breakpoints: a breakpoint mixin that uses Sass maps, from https://github.com/zellwk/mappy-breakpoints.\n  @import \"mappy-breakpoints/mappy-breakpoints\";\n\n  // Normalize: make browsers render things more consistently, from https://necolas.github.io/normalize.css/.\n  @import \"deps/normalize\";\n\n  // Reset: a reset stylesheet to reduce browser inconsistencies, http://meyerweb.com/eric/tools/css/reset/.\n  @import \"deps/reset\";\n\n  // 2. Configuration //\n\n  @import \"config/layout\";\n  @import \"config/color\";\n  @import \"config/fonts\";\n  @import \"config/type\";\n  @import \"config/animation\";\n\n  // 3. Patterns //\n\n  // Styles required by WordPress core.\n  @import \"patterns/wordpress\";\n\n  // 4. Sections //\n\n  @import \"sections/content\";\n\n  // Apply fundamental styles to editor.\n  @include ctnr(golden);\n\n  color: palette(gray, dark);\n  font-family: $sans;\n  font-weight: $sans-normal;\n}\n","/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */\n\n/**\n * 1. Change the default font family in all browsers (opinionated).\n * 2. Correct the line height in all browsers.\n * 3. Prevent adjustments of font size after orientation changes in IE and iOS.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  line-height: 1.15; /* 2 */\n  -ms-text-size-adjust: 100%; /* 3 */\n  -webkit-text-size-adjust: 100%; /* 3 */\n}\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n * 2. Add the correct display in IE.\n */\n\narticle,\naside,\ndetails, /* 1 */\nfigcaption,\nfigure,\nfooter,\nheader,\nmain, /* 2 */\nmenu,\nnav,\nsection,\nsummary { /* 1 */\n  display: block;\n}\n\n/**\n * Add the correct display in IE 9-.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in iOS 4-7.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Add the correct display in IE 10-.\n * 1. Add the correct display in IE.\n */\n\ntemplate, /* 1 */\n[hidden] {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\n\na {\n  background-color: transparent; /* 1 */\n  -webkit-text-decoration-skip: objects; /* 2 */\n}\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers (opinionated).\n */\n\na:active,\na:hover {\n  outline-width: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\n\nb,\nstrong {\n  font-weight: inherit;\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * Add the correct font style in Android 4.3-.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Add the correct background and color in IE 9-.\n */\n\nmark {\n  background-color: #ff0;\n  color: #000;\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10-.\n */\n\nimg {\n  border-style: none;\n}\n\n/**\n * Hide the overflow in IE.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct margin in IE 8.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change font properties to `inherit` in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Restore the font weight unset by the previous rule.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\nhtml [type=\"button\"], /* 1 */\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Change the border, margin, and padding in all browsers (opinionated).\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.\n */\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n","// ==== LAYOUT ==== //\n\n/* Define all global layouts and layout styles here. */\n\n/*\n * 1. Breakpoints\n * 2. ctnr()\n * 3. Helpers\n */\n\n// 1. Breakpoints //\n\n$breakpoints: (small: 576px, medium: 769px, large: 1025px, x-large: 1441px);\n\n/* You can use any valid arguments inserted into mappy-bp as the map values. Use with mappy-query(). */\n$mappy-queries: (phone: mappy-bp(max-width small), phone-tablet: mappy-bp(max-width medium), tablet: mappy-bp(small medium), tablet-desktop: mappy-bp(small), desktop: mappy-bp(medium), desktop-large: mappy-bp(large));\n\n// 2. ctnr() //\n\n/* Content can take on three different widths: full, wide and golden. */\n@mixin ctnr($width: null) {\n  @if $width == null {\n    @warn \"Mixin ctnr() received no input! Please provide a width.\";\n  }\n  @else if $width == \"golden\" {\n    width: auto;\n    margin-right: vr(1);\n    margin-left: vr(1);\n    display: block;\n\n    @include mappy-query(desktop) {\n      width: 36rem;\n      margin-right: auto;\n      margin-left: auto;\n      max-width: calc(100% - #{vr(2)});\n    }\n  }\n  @else if $width == \"wide\" {\n    width: auto;\n    margin-right: vr(1);\n    margin-left: vr(1);\n    display: block;\n\n    @include mappy-query(desktop) {\n      width: 54rem;\n      margin-right: auto;\n      margin-left: auto;\n      max-width: calc(100% - #{vr(2)});\n    }\n  }\n  @else if $width == \"hybrid\" {\n    display: block;\n    width: 100vw;\n    max-width: 100%;\n\n    @include mappy-query(desktop-large) {\n      width: 54rem;\n      margin-right: auto;\n      margin-left: auto;\n      max-width: calc(100% - #{vr(2)});\n    }\n  }\n  @else if $width == \"full\" {\n    display: block;\n    width: 100vw;\n    max-width: 100%;\n  }\n  @else {\n    @warn \"Mixin ctnr() received invalid input! This width does not exist.\";\n  }\n}\n\n// 3. Helpers //\n\nbody {\n  /* Search open */\n  &.-search-open {\n    height: 100%;\n    overflow: hidden;\n  }\n}\n\n/* Limits width on large screens and centers content. */\n#site {\n  max-width: 72rem;\n  margin: 0 auto;\n  padding-top: vr(3.5);\n}\n\n@mixin clearfix {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n","@mixin typi(\n  $target-map,\n  $breakpoints: $breakpoints,\n  $typi: $typi,\n  $typi-ms: $typi-ms,\n  $base: false,\n  $rem: true\n) {\n  $typi-map: (\n    target: $target-map,\n    breakpoints: $breakpoints,\n    typi: $typi,\n    base: $base,\n    rem: $rem,\n    ms: $typi-ms\n  );\n\n  $breakpoints-to-output: _ty-get-breakpoints($breakpoints, $typi-ms, $target-map);\n  @each $breakpoint in $breakpoints-to-output {\n    $target: $target-map;\n    $typi-map: map-merge($typi-map, (breakpoint: $breakpoint));\n\n    @if $breakpoint == null {\n      @include _ty-write-props($typi-map);\n    }\n\n    @else {\n      @if map-has-key($breakpoints, $breakpoint) {\n        @include _ty-breakpoint($typi-map);\n      } @else {\n        @warn \"Missing #{$breakpoint} in $breakpoints map\";\n      }\n    }\n\n    // Add previous valid breakpoint\n    @if map-has-key($target, $breakpoint) {\n      $typi-map: map-merge($typi-map, (last-valid-breakpoint: $breakpoint))\n    }\n\n    // Add previous valid ms\n    @if type-of($typi-ms) == 'map' and map-has-key($typi-ms, $breakpoint)  {\n      $typi-map: map-merge($typi-map, (last-valid-ms: $breakpoint))\n    }\n  }\n}\n\n@mixin typi-base(\n  $typi: $typi,\n  $breakpoints: $breakpoints,\n  $typi-ms: $typi-ms,\n  $base: true,\n  $rem: true\n) {\n  @include typi(\n    $typi,\n    $breakpoints,\n    $typi: $typi,\n    $typi-ms: $typi-ms,\n    $base: $base,\n    $rem: $rem\n  );\n}\n\n// Vertical rhythm function. Possible to output both EM and REM.\n// Requires line height to be set on $typi map for 'null' breakpoint\n@function vr($vr, $current-font: null, $typi: $typi) {\n  $base-font: _ty-get-base-font($typi);\n  $base-line-height: _ty-get-base-line-height($typi);\n  $rhythm-context: $vr * $base-line-height;\n\n  // Converts into EM if $current-font is provided\n  @if $current-font {\n    @if unit($current-font) == \"px\" {\n      $rhythm-context: $rhythm-context * $base-font;\n\n      @return $rhythm-context / $current-font * 1em;\n    }\n\n    @if unit($current-font) == \"em\" {\n      @return $rhythm-context / _ty-strip-unit($current-font) * 1em;\n    }\n\n    @else {\n      @error \"Font sizes should either be px or em if $current-font is provided\";\n    }\n  }\n\n  @else {\n    @if unit($base-line-height) == 'px' {\n      @return $vr * $base-line-height / $base-font-size * 1rem;\n    } @else {\n      @return $vr * $base-line-height * 1rem;\n    }\n  }\n}\n\n// Responsive Vertical Rhythm\n@mixin rvr($props, $vr, $typi: $typi) {\n  $base-font: _ty-get-base-font($typi);\n  $base-line-height: _ty-get-base-line-height($typi);\n  $unit: unit($base-line-height);\n\n  @each $prop in $props {\n    @if $unit == 'px' {\n      #{$prop}: $base-line-height / $base-font * 1rem * $vr;\n    } @else {\n      #{$prop}: $base-line-height * 1rem * $vr;\n    }\n    #{$prop}: calc(var(--baseline) * #{1rem * $vr});\n  }\n}","// ==== COLOR ==== //\n\n// Set all colors related things here.\n\n// 1. Base colors\n// 2. Color transformations\n// 3. palette()\n\n// 1. Base colors //\n\n// #0064a6\n$base-blue: #1366a9;\n\n// #009b90\n$base-turquoise: #21a7ac;\n\n// #741669\n$base-purple: #741868;\n\n// #ad1644\n$base-pink: #ac1743;\n\n// #de6328\n$base-orange: #e06f3b;\n\n$factor-lighten: 8%;\n$factor-darken: 8%;\n\n// 2. Color transformations //\n\n// Sass map for the color palette; see `_library.scss` for the palette() function.\n$_palettes: (blue: (base: $base-blue, light: lighten($base-blue, $factor-lighten), dark: darken($base-blue, $factor-darken)), turquoise: (base: $base-turquoise, light: lighten($base-turquoise, $factor-lighten), dark: darken($base-turquoise, $factor-darken)), purple: (base: $base-purple, light: lighten($base-purple, $factor-lighten), dark: darken($base-purple, $factor-darken)), pink: (base: $base-pink, light: lighten($base-pink, $factor-lighten), dark: darken($base-pink, $factor-darken)), orange: (base: $base-orange, light: lighten($base-orange, $factor-lighten), dark: darken($base-orange, $factor-darken)), gray: (base: #717073, lighter: #f5f5f5, light: #dddce0, dark: #515152, darker: #333234), white: (base: #fff, light: #fdfdfd, dark: #fff));\n\n// 3. palette() //\n\n// A simple function to retrieve a color from the palette, adapted from http://erskinedesign.com/blog/friendlier-colour-names-sass-maps/.\n@function palette($palette, $tone: \"base\") {\n  @return map-get(map-get($_palettes, $palette), $tone);\n}\n","// ==== TYPOGRAPHY ==== //\n\n// Define all global font styles here.\n\n// 1. Variables\n// 2. font()\n// 3. Link styles\n// 4. Global styles\n\n// 1. Variables //\n\n$sans: \"Source Sans Pro\", \"Bliss\", Arial, sans-serif;\n$sans-normal: 400;\n$sans-medium: 500;\n$sans-bold: 700;\n\n$ms-base: 1rem;\n$ms-ratio: 1.2;\n\n$typi: (null: (16px, 1.6), medium: 21px, x-large: 28px);\n\n// 2. font() //\n\n// The font() function accepts a style parameter.\n// It is intended to promote consistency in the typography,\n// therefore the number of styles should be kept to a minimum.\n// Attributes which change between instances should not be defined here (e.g. color).\n@mixin font($style: null) {\n  @if $style == null {\n    @warn \"Mixin font() received no input! Please provide a style.\";\n\n    color: red;\n    font-size: ms(10);\n  }\n  @else if $style == \"title\" {\n    font-size: ms(6);\n    font-weight: $sans-bold;\n    line-height: 1;\n    word-wrap: break-word;\n  }\n  @else if $style == \"header1\" {\n    font-size: ms(4);\n    font-weight: $sans-bold;\n    line-height: 1.2;\n    word-wrap: break-word;\n  }\n  @else if $style == \"header2\" {\n    font-size: ms(3);\n    font-weight: $sans-bold;\n    line-height: 1.2;\n    word-wrap: break-word;\n  }\n  @else if $style == \"header3\" {\n    font-size: ms(2);\n    font-weight: $sans-bold;\n    line-height: 1.2;\n    word-wrap: break-word;\n  }\n  @else if $style == \"header4\" {\n    font-size: ms(1);\n    font-weight: $sans-bold;\n    line-height: 1.2;\n    word-wrap: break-word;\n  }\n  @else if $style == \"large\" {\n    font-size: ms(1);\n    font-weight: $sans-medium;\n    word-wrap: break-word;\n  }\n  @else if $style == \"body\" {\n    font-size: ms(0);\n    word-wrap: break-word;\n  }\n  @else if $style == \"small\" {\n    font-size: ms(-1);\n    font-weight: $sans-medium;\n    letter-spacing: 0.01rem;\n    word-wrap: break-word;\n  }\n  @else if $style == \"button\" {\n    font-size: ms(-1);\n    font-weight: $sans-bold;\n    letter-spacing: 0.02rem;\n    cursor: pointer;\n    word-wrap: break-word;\n  }\n  @else {\n    @warn \"Mixin font() received invalid input! This style does not exist.\";\n\n    color: red;\n    font-size: ms(10);\n  }\n}\n\n// 3. Link Styles //\n\n@mixin link-arrow($direction: none, $color: none) {\n  transform: translate(0, 0) translateZ(0);\n  transition: color $anim-s;\n  color: palette($color);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: palette($color, light);\n  }\n\n  @if $direction == right {\n    &::after {\n      display: inline-block;\n      padding-left: vr(0.2);\n      transform: translate(0, 0);\n      transition: transform $anim-s;\n      color: inherit;\n      content: \"→\";\n    }\n\n    &:hover::after,\n    &:focus::after {\n      transform: translate(0.35rem, 0);\n    }\n  }\n  @else if $direction == left {\n    &::before {\n      content: \"←\";\n      color: inherit;\n      padding-right: vr(0.2);\n      display: inline-block;\n      transform: translate(0, 0);\n      transition: transform $anim-s;\n    }\n\n    &:hover::before,\n    &:focus::before {\n      transform: translate(-0.35rem, 0);\n    }\n  }\n  @else if $direction == down {\n    &::after {\n      content: \"↓\";\n      color: inherit;\n      padding-left: vr(0.2);\n      display: inline-block;\n      transform: translate(0, 0);\n      transition: transform $anim-s;\n    }\n\n    &:hover::after,\n    &:focus::after {\n      transform: translate(0, 0.35rem);\n    }\n  }\n  @else {\n    @warn \"Mixin link-arrow() received invalid input! This direction does not exist.\";\n\n    color: purple;\n    font-size: ms(10);\n  }\n}\n\n@mixin link-underline($color: none) {\n  position: relative;\n  z-index: 1;\n  color: palette($color);\n  display: inline-block;\n  cursor: pointer;\n  transition: color $anim-s;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    z-index: -1;\n    background-color: palette($color, light);\n    visibility: hidden;\n    transform: translate(0px, 2px);\n    opacity: 0;\n    transition: visibility $anim-s, opacity $anim-s, transform $anim-s;\n  }\n\n  &:hover,\n  &:focus {\n    color: palette($color, light);\n  }\n\n  &:hover::after,\n  &:focus::after {\n    visibility: visible;\n    opacity: 1;\n    transform: translate(0px, -2px);\n  }\n}\n\n// 4. Global styles //\n\n/* Update the foundational and global aspects of the page. */\n\nhtml {\n  @include typi-base;\n\n  font-family: $sans;\n  font-weight: $sans-normal;\n  word-wrap: break-word;\n  background-color: palette(gray, darker);\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */\n  box-sizing: inherit;\n}\n\nbody {\n  min-height: 100vh;\n  min-width: 100vw;\n  overflow-x: hidden;\n  background-color: palette(white, light);\n  color: palette(gray, dark);\n}\n\na {\n  border: 0;\n  color: inherit;\n  text-decoration: none;\n}\n\nstrong,\n.strong {\n  font-weight: $sans-bold;\n}\n\ndfn,\ni,\nem,\n.em {\n  font-style: italic;\n}\n\ncode,\nkbd,\ntt,\nvar,\nsamp,\npre {\n  font-family: 'Courier New', Courier, monospace;\n}\n\npre {\n  border: 1px solid palette(gray, light);\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 1.3125;\n  margin: 0 0 1.75em;\n  max-width: 100%;\n  overflow: auto;\n  padding: 1.75em;\n  white-space: pre;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n\ncode {\n  background-color: palette(gray, light);\n  padding: 0.125em 0.25em;\n}\n\nabbr,\nacronym {\n  border-bottom: 1px dotted palette(gray, light);\n  cursor: help;\n}\n\nmark,\nins {\n  background: palette(blue, light);\n  color: palette(white);\n  padding: 0.125em 0.25em;\n  text-decoration: none;\n}\n\nbig {\n  font-size: 125%;\n}\n\nhr {\n  background-color: palette(gray, light);\n  border: 0;\n  height: 1px;\n  margin: 0 0 vr(1);\n}\n\ncite {\n  font-size: ms(0);\n  color: palette(gray);\n\n  &::before {\n    content: \"\\2014\\00a0\";\n  }\n}\n\nstrong,\nb {\n  font-weight: $sans-bold;\n}\n\ndel {\n  opacity: 0.8;\n}\n","/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","@charset \"UTF-8\";\n\n@font-face {\n  font-family: \"uwc-website\";\n  src: url(\"fonts/uwc-website.eot\");\n  src: url(\"fonts/uwc-website.eot?#iefix\") format(\"embedded-opentype\"), url(\"fonts/uwc-website.woff\") format(\"woff\"), url(\"fonts/uwc-website.ttf\") format(\"truetype\"), url(\"fonts/uwc-website.svg#uwc-website\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n[data-icon]::before {\n  font-family: \"uwc-website\" !important;\n  content: attr(data-icon);\n  font-style: normal !important;\n  font-weight: normal !important;\n  font-variant: normal !important;\n  text-transform: none !important;\n  speak: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n[class^=\"icon-\"]::before,\n[class*=\" icon-\"]::before {\n  font-family: \"uwc-website\" !important;\n  font-style: normal !important;\n  font-weight: normal !important;\n  font-variant: normal !important;\n  text-transform: none !important;\n  speak: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-google::before {\n  content: \"\\61\";\n}\n\n.icon-whatsapp::before {\n  content: \"\\62\";\n}\n\n.icon-wordpress::before {\n  content: \"\\63\";\n}\n\n.icon-linkedin::before {\n  content: \"\\67\";\n}\n\n.icon-facebook::before {\n  content: \"\\68\";\n}\n\n.icon-twitter::before {\n  content: \"\\69\";\n}\n\n.icon-youtube::before {\n  content: \"\\6a\";\n}\n\n.icon-instagram::before {\n  content: \"\\6b\";\n}\n\n.icon-vimeo::before {\n  content: \"\\6c\";\n}\n\n.icon-tumblr::before {\n  content: \"\\6d\";\n}\n\n.icon-rss::before {\n  content: \"\\6e\";\n}\n\n.icon-envelope::before {\n  content: \"\\6f\";\n}\n\n.icon-github::before {\n  content: \"\\70\";\n}\n\n.icon-pinterest::before {\n  content: \"\\71\";\n}\n\n.icon-flickr::before {\n  content: \"\\72\";\n}\n","\n// _ty-breakpoint\n// ==============\n// Allows use of breakpoint-sass and mappy-bp.\n// Falls back to default method otherwise.\n@mixin _ty-breakpoint(\n  $typi-map\n) {\n  $breakpoint: map-get($typi-map, breakpoint);\n  $breakpoints: map-get($typi-map, breakpoints);\n  $bp-val: map-get($breakpoints, $breakpoint);\n\n  @if $typi-breakpoint == breakpoint {\n    @if mixin-exists(breakpoint) {\n      @include breakpoint-set('to ems', true);\n      @include breakpoint(map-get($breakpoints, $breakpoint)) {\n        @include _ty-write-props($typi-map);\n      }\n    } @else {\n      @error 'Breakpoint-sass Library not found'\n    }\n  }\n\n  @else if $typi-breakpoint == mappy-breakpoint or $typi-breakpoint == mappy-breakpoints {\n    @if mixin-exists(mappy-bp) {\n      @include mappy-bp(map-get($breakpoints, $breakpoint)) {\n        @include _ty-write-props($typi-map);\n      }\n    } @else {\n      @error 'Mappy Breakpoints Library not found'\n    }\n  }\n\n  @else {\n    @media all and (min-width: #{map-get($breakpoints, $breakpoint)}) {\n      @include _ty-write-props($typi-map);\n    }\n  }\n}\n\n// _ty-write-props\n// ===============\n// Writes font-size (and line height) properties\n@mixin _ty-write-props (\n  $typi-map\n) {\n  $target: map-get($typi-map, target);\n  $breakpoint: map-get($typi-map, breakpoint);\n  $typi: map-get($typi-map, typi);\n  $base: map-get($typi-map, base);\n  $rem: map-get($typi-map, rem);\n\n  $bp-val: map-get($target, $breakpoint);\n  $font-size: null;\n  $line-height: null;\n\n  @if type-of($bp-val) == 'null' {\n    $last-valid-breakpoint: map-get($typi-map, last-valid-breakpoint);\n    $bp-val: map-get($target, $last-valid-breakpoint);\n  }\n\n  @if type-of($bp-val) == \"list\" and length($bp-val) > 1 {\n    $font-size: nth($bp-val, 1);\n    $line-height: nth($bp-val, 2);\n    font-size: _ty-font-size($font-size, $breakpoint, $typi, $rem, $base, $typi-map);\n    line-height: $line-height;\n  }\n  @else  {\n    $font-size: $bp-val;\n    font-size: _ty-font-size($font-size, $breakpoint, $typi, $rem, $base, $typi-map);\n  }\n}","// _ty-font-size\n// =============\n// Calls _ty-calc-font-size or _ty-base-size\n@function _ty-font-size(\n  $font-size,\n  $breakpoint,\n  $typi,\n  $rem,\n  $base: false,\n  $typi-map: false\n) {\n  @if $base == true {\n    @return _ty-base-size($font-size);\n  } @else {\n    @return _ty-calc-font-size($font-size, $breakpoint, $typi, $rem, $typi-map);\n  }\n}\n\n// _ty-calc-font-size\n// =======\n// returns correct rem value depending on\n// breakpoint\n@function _ty-calc-font-size(\n  $font-size,\n  $breakpoint,\n  $typi,\n  $rem,\n  $typi-map: false\n) {\n  @if unitless($font-size) {\n    @if function-exists(ms) {\n      $typi-ms: map-get($typi-map, ms);\n      @if $rem {\n        @return _ty-strip-unit(_ty-ms($font-size, $breakpoint, $typi-ms, $typi-map)) * 1rem;\n      } @else {\n        @return _ty-ms($font-size, $breakpoint, $typi-ms, $typi-map);\n      }\n    } @else {\n      @error \"Modular Scale Library required\";\n    }\n  }\n\n  // Convert px and em into rem\n  @else if $rem {\n    @if unit($font-size) == 'em' {\n      @return _ty-strip-unit($font-size) * 1rem;\n    }\n\n    @else if unit($font-size) == 'px' {\n      $basemap: map-get($typi, $breakpoint);\n      $basefont: if(type-of($basemap) == 'list', nth($basemap, 1), $basemap);\n\n      @if $basefont == null {\n        $basefont: nth(map-get($typi, null), 1);\n      }\n\n      @return $font-size / $basefont * 1rem;\n    }\n\n    @else {\n      @return $font-size;\n    }\n  }\n\n  // Converts rem and px into em\n  @else {\n    @if unit($font-size) == 'rem' {\n      @return _ty-strip-unit($font-size) * 1em;\n    }\n\n    @else if unit($font-size) == 'px' {\n      $basemap: map-get($typi, $breakpoint);\n      $basefont: if(type-of($basemap) == 'list', nth($basemap, 1), $basemap);\n\n      @if $basefont == null {\n        $basefont: nth(map-get($typi, null), 1);\n      }\n\n      @return _ty-em($font-size, $basefont);\n    }\n\n    @else {\n      @return $font-size;\n    }\n  }\n}\n\n// _ty-base-size\n// =============\n// Converts Typi sizes into percentages\n@function _ty-base-size(\n  $font-size\n) {\n  @if unit($font-size) == 'px' {\n    @return $font-size / 16px * 100%;\n  }\n\n  @else {\n    @error 'Typi font sizes must be written in pixels';\n  }\n}\n\n\n// _ty-strip-unit\n// ==============\n@function _ty-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n// _ty-em\n// ========\n@function _ty-em($font-size, $ref-size: false) {\n  @if ($ref-size) {\n    @return $font-size / $ref-size * 1em;\n  }\n}\n\n// _ty-rem\n// =========\n@function _ty-rem($font-size) {\n  @if unit($font-size) == 'px' {\n    @return strip-unit($font-size) / 16 * 1rem;\n  }\n  @else if unit($font-size) == 'em' {\n    @return strip-unit($font-size) * 1rem;\n  }\n}\n\n// _ty-ms\n// ======\n@function _ty-ms(\n  $multiplier,\n  $breakpoint: null,\n  $typi-ms: $typi-ms,\n  $typi-map: false\n) {\n  $ms-setting: null;\n  @if map-has-key($typi-ms, $breakpoint) {\n    $ms-setting: map-get($typi-ms, $breakpoint);\n  } @else {\n    $last-valid-ms: map-get($typi-map, last-valid-ms);\n    $ms-setting: map-get($typi-ms, $last-valid-ms);\n  }\n\n  $ty-ms-base: null;\n  $ty-ms-ratio: null;\n\n  @for $i from 1 to length($ms-setting) + 1 {\n    $val: nth($ms-setting, $i);\n\n\n    // For combinations of multiple bases + multiple ratios\n    @if type-of($val) == 'list' {\n      @if not unitless(nth($val, 1)) {\n        $ty-ms-base: $val;\n      } @else {\n        $ty-ms-ratio: $val;\n      }\n    }\n    // For combinations of 1 base + multiple ratios\n    @else {\n      @if unitless($val) {\n        @if $ty-ms-ratio == null {\n          $ty-ms-ratio: $val;\n        } @else if type-of($ty-ms-ratio) == \"number\" {\n          $ty-ms-ratio: $ty-ms-ratio $val;\n        } @else if type-of($ty-ms-ratio) == \"list\" {\n          $ty-ms-ratio: append($ty-ms-ratio, $val);\n        }\n      }\n\n      @else {\n        @if $ty-ms-base == null {\n          $ty-ms-base: $val;\n        } @else if type-of($ty-ms-base) == 'number' {\n          $ty-ms-base: ($ty-ms-base $val)\n        } @else if type-of($ty-ms-base) == 'list' {\n          $ty-ms-base: append($ty-ms-base, $val);\n        }\n      }\n    }\n  }\n\n  @if $ty-ms-base == null {\n    $ty-ms-base: 1em;\n  }\n\n  @return ms($multiplier, $ty-ms-base, $ty-ms-ratio);\n}\n\n// _ty-get-breakpoints\n// ===================\n@function _ty-get-breakpoints($breakpoints, $typi-ms, $target) {\n  $_return: null;\n\n  @each $breakpoint, $val in $breakpoints {\n    @if type-of($typi-ms) == 'map' and map-has-key($typi-ms, $breakpoint) {\n      @if not index($_return, $breakpoint) {\n        $_return: append($_return, $breakpoint);\n      }\n    }\n\n    @if map-has-key($target, $breakpoint) {\n      @if not index($_return, $breakpoint) {\n        $_return: append($_return, $breakpoint);\n      }\n    }\n  }\n  @return $_return;\n}\n\n// _ty-get-base-font\n@function _ty-get-base-font($typi) {\n  $base-map: map-get($typi, null);\n  @return nth($base-map, 1);\n}\n\n// _ty-get-base-line-height\n@function _ty-get-base-line-height($typi) {\n  $base-map: map-get($typi, null);\n  $base-line-height: null;\n\n  @if length($base-map) > 1 {\n    $base-line-height: nth($base-map, 2);\n  } @else {\n    @error \"$typi map should contain a second argument (line-height) in the `null` key\";\n  }\n\n  @if not unit($base-line-height) == \"\" {\n    @error \"line-height multiple on the `null` key should be unitless\";\n  }\n\n  @return $base-line-height;\n}\n","@function ms-calc($Value, $Base: $ms-base, $Ratio: $ms-ratio) {\n  \n  // If pow exists use it.\n  // It supports non-interger values!\n  @if $MS-pow-exists {\n\n    // The formula for figuring out modular scales is:\n    // (r^v)*b\n    @return pow($Ratio, $Value) * $Base;\n  }\n\n  // If not, use ms-pow().\n  // Not as fast or capable of non-integer exponents.\n  @else {\n    @return ms-pow($Ratio, $Value) * $Base;\n  }\n}","// ==== WORDPRESS ==== //\n\n/*\n * Several classes for aligning images and block elements (div, p, table etc.) are required by WordPress.\n * The same classes are used to align images that have a caption.\n * Three additional CSS classes are needed for the captions, and one more for accessibility.\n */\n\n/**\n * 1. Alignment\n * 2. Captions\n * 3. Media\n * 4. Gallery\n * 5. Accessibility\n */\n\n// 1. Alignment //\n\n.alignnone,\n.aligncenter {\n  max-width: 100%;\n  text-align: center;\n}\n\n.alignnone img {\n  width: 100vw !important;\n  max-width: 100vw;\n  margin: vr(0.5) calc((100vw - 100%) / -2);\n\n  @include mappy-query(desktop-large) {\n    width: 56rem !important;\n    max-width: calc(100vw - #{vr(4)});\n    margin-top: vr(0.5);\n    margin-right: -10rem;\n    margin-bottom: vr(0.5);\n    margin-left: -10rem;\n  }\n}\n\n.aligncenter img {\n  margin: vr(0.5) auto vr(0.5);\n  width: 100%;\n  max-width: 100%;\n}\n\nfigure.alignright {\n  float: right;\n  margin: vr(0.25) 0 vr(0.25) vr(0.75);\n  max-width: 100%;\n}\n\nfigure.alignleft {\n  float: left;\n  margin: vr(0.25) vr(0.75) vr(0.25) 0;\n  max-width: 100%;\n}\n\n// 2. Captions //\n\n.wp-caption img {\n  margin-bottom: vr(0.5);\n}\n\n.wp-caption.alignnone,\n.wp-caption.aligncenter {\n  min-width: 100%;\n  text-align: center;\n  margin-top: vr(0.5);\n  margin-bottom: vr(1);\n}\n\n.wp-caption.alignleft {\n  text-align: left;\n}\n\n.wp-caption.alignright {\n  text-align: right;\n}\n\n.wp-caption .wp-caption-text,\n.wp-caption-dd {\n  @include font(small);\n\n  line-height: 1.3;\n  font-style: italic;\n  color: palette(gray);\n}\n\n// 3. Media //\n\n.wp-audio-shortcode a,\n.wp-playlist a {\n  box-shadow: none;\n}\n\n.wp-audio-shortcode,\n.wp-video,\n.wp-playlist.wp-audio-playlist {\n  margin-top: 0;\n  margin-bottom: 1.75em;\n}\n\n.wp-playlist.wp-audio-playlist {\n  padding-bottom: 0;\n}\n\n.wp-playlist .wp-playlist-tracks {\n  margin-top: 0;\n}\n\n.wp-playlist-item .wp-playlist-caption {\n  border-bottom: 0;\n  padding: 0.7142857143em 0;\n}\n\n.wp-playlist-item .wp-playlist-item-length {\n  top: 0.7142857143em;\n}\n\n/* Make sure embeds and iframes fit their containers. */\nembed,\niframe,\nobject,\nvideo {\n  margin-bottom: vr(1);\n  max-width: 100%;\n  vertical-align: middle;\n}\n\np > embed,\np > iframe,\np > object,\np > video {\n  margin-bottom: 0;\n}\n\n.site .avatar {\n  border-radius: 50%;\n}\n\n.entry-content .wp-smiley,\n.entry-summary .wp-smiley,\n.comment-content .wp-smiley,\n.textwidget .wp-smiley {\n  border: none;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n}\n\n.entry-content a img,\n.entry-summary a img,\n.comment-content a img,\n.textwidget a img {\n  display: block;\n}\n\n// 4. Gallery //\n\n.gallery {\n  margin: vr(1) -#{vr(0.25)};\n  max-width: calc( 100% + #{vr(0.5)});\n}\n\n.gallery-item {\n  display: inline-block;\n  max-width: calc( 100% / 3 );\n  padding: 0 vr(0.25) vr(0.5);\n  text-align: center;\n  vertical-align: top;\n  width: 100%;\n}\n\n.gallery-columns-1 .gallery-item {\n  max-width: 100%;\n}\n\n.gallery-columns-2 .gallery-item {\n  max-width: calc( 100% / 2 );\n}\n\n.gallery-columns-4 .gallery-item {\n  max-width: calc( 100% / 4 );\n}\n\n.gallery-columns-5 .gallery-item {\n  max-width: calc( 100% / 5 );\n}\n\n.gallery-columns-6 .gallery-item {\n  max-width: calc( 100% / 6 );\n}\n\n.gallery-columns-7 .gallery-item {\n  max-width: calc( 100% / 7 );\n}\n\n.gallery-columns-8 .gallery-item {\n  max-width: calc( 100% / 8 );\n}\n\n.gallery-columns-9 .gallery-item {\n  max-width: calc( 100% / 9 );\n}\n\n.gallery-icon img {\n  margin: 0 auto;\n}\n\n.gallery-caption {\n  @include font(small);\n\n  line-height: 1.3;\n  font-style: italic;\n  color: palette(gray);\n  display: block;\n}\n\n.gallery-columns-6 .gallery-caption,\n.gallery-columns-7 .gallery-caption,\n.gallery-columns-8 .gallery-caption,\n.gallery-columns-9 .gallery-caption {\n  display: none;\n}\n\n// 5. Accessibility //\n\n/* Text meant only for screen readers. */\n.screen-reader-text {\n  clip: rect(1px, 1px, 1px, 1px);\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n}\n\n.screen-reader-text:focus {\n  background-color: #f1f1f1;\n  border-radius: 3px;\n  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\n  clip: auto !important;\n  color: #21759b;\n  display: block;\n  font-size: 14px;\n  font-size: 0.875rem;\n  font-weight: bold;\n  height: auto;\n  left: vr(0.5);\n  line-height: normal;\n  padding: 15px 23px 14px;\n  text-decoration: none;\n  top: vr(0.5);\n  width: auto;\n  z-index: 100000;\n\n  /* Above WP toolbar. */\n}\n\n/* Limits the size of images  */\n.size-auto,\n.size-full,\n.size-large,\n.size-medium,\n.size-thumbnail {\n  max-width: 100%;\n  height: auto;\n}\n","// Mappy breakpoints\n// -----------------\n// Output media query with focus on min-width, max-width, min-height and max-height.\n// Other media rules are passed as the second argument in a map\n//\n// @author Zell Liew\n// =================\n$breakpoints: () !default;\n$mappy-queries: () !default;\n\n// Mappy BP [Mixin]\n// ----------------\n// - $queries         : <string> or <number> in the format:\n//                      <min-width> <max-width> h <min-height> <max-height> <key> <value>\n// - $type            : <media-type>\n// - $query-fallback  : <string> selector class\n// - $breakpoints     : <map>\n@mixin mappy-bp($queries, $type: all, $query-fallback: null, $breakpoints: $breakpoints) {\n\n  // Gets mappy map through mappy-bp fn\n  $mappy-map: mappy-bp($queries, $type, $query-fallback, $breakpoints);\n\n  // Outputs media string\n  @media #{map-get($mappy-map, type)} and #{map-get($mappy-map, media-string)} {\n    @content;\n  }\n\n  // If a query fallback is provided\n  @if $query-fallback {\n    #{$query-fallback} & {\n      @content;\n    }\n  }\n}\n\n// Mappy Query [Mixin]\n// -------------------\n// Output query from $mappy-queries map.\n// $query : <string> from $mappy-queries key\n@mixin mappy-query($query, $mappy-queries: $mappy-queries) {\n  @if not map-has-key($mappy-queries, $query) {\n    @error \"#{$mappy-queries} does not contain #{$query}\";\n  }\n\n  $mappy-map: map-get($mappy-queries, $query);\n\n  @media #{map-get($mappy-map, type)} and #{map-get($mappy-map, media-string)} {\n    @content;\n  }\n\n  // If a query fallback is provided\n  @if map-get($mappy-map, query-fallback) {\n    #{map-get($mappy-map, query-fallback)} & {\n      @content;\n    }\n  }\n}\n\n// Mappy BP [Function]\n// -------------------\n// Returns a map with 3 keys\n// - type           : Media type\n// - media-string   : media query string\n// - query-fallback : query fallback (if any)\n@function mappy-bp($queries, $type: all, $query-fallback: null, $breakpoints: $breakpoints) {\n  $media-string: ();\n  $_return: ();\n  $media-map: parse-bp($queries, $breakpoints);\n\n  @each $key, $value in $media-map {\n    @if $value and $value != 0 {\n      @if $media-string == (()) {\n        $media-string: append($media-string, unquote(\"(#{$key}: #{$value})\"));\n      }\n\n      @else {\n        $media-string: append($media-string, unquote(\"and (#{$key}: #{$value})\"));\n      }\n    }\n  }\n  $_return: (\n    type: $type,\n    media-string: implode($media-string),\n    query-fallback: $query-fallback\n  );\n\n  @return $_return;\n}\n\n// BP [Mixin]\n// ----------\n// Convenience mixin for Mappy Breakpoints\n@mixin bp($queries, $type: all, $query-fallback: null, $breakpoints: $breakpoints) {\n  @include mappy-bp($queries, $type, $query-fallback, $breakpoints) {\n    @content;\n  }\n}\n\n// Parse BP [function]\n// -------------------\n// Parses arguments and returns a map with 4 keys\n@function parse-bp($queries, $breakpoints) {\n  $_return: ();\n  $_i: 1;\n  $_minw: null;\n  $_maxw: null;\n  $_minh: null;\n  $_maxh: null;\n  $_length: length($queries);\n\n  // Checks for width queries\n  $_minw: nth($queries, 1);\n  $_minw: mappy-validate($_minw, $breakpoints);\n\n  // Check for width queries\n  @if $_minw {\n    $_minw: mappy-convert-to-em($_minw);\n    $_return: map-merge($_return, (min-width: $_minw));\n    $queries: set-nth($queries, 1, null);\n  }\n\n  // Checks if there is a max width query\n  @if $_minw and $_length >= 2 {\n    $_maxw: nth($queries, 2);\n    $_maxw: mappy-validate($_maxw, $breakpoints);\n  }\n\n  @if $_maxw {\n    $_maxw: mappy-convert-to-em($_maxw - 1px);\n    $_return: map-merge($_return, (max-width: $_maxw));\n    $queries: set-nth($queries, 2, null);\n  }\n\n  // Checks for height queries\n  $_h: index($queries, h) or index($queries, height);\n\n  @if $_h {\n    $_minh: nth($queries, $_h + 1);\n    $_minh: mappy-validate($_minh, $breakpoints);\n\n    @if $_minh {\n      $_minh: mappy-convert-to-em($_minh);\n      $_return: map-merge($_return, (min-height: $_minh));\n      $queries: set-nth($queries, $_h + 1, null);\n    }\n\n    // Checks if there is a max height query\n    @if $_length - $_h >= 2 {\n      $_maxh: nth($queries, $_h + 2);\n      $_maxh: mappy-validate($_maxh, $breakpoints);\n    }\n\n    @if $_maxh {\n      $_maxh: mappy-convert-to-em($_maxh - 1px);\n      $_return: map-merge($_return, (max-height: $_maxh));\n      $queries: set-nth($queries, $_h + 2, null);\n    }\n    // Reset h marker\n    $queries: set-nth($queries, $_h, null);\n  }\n\n  // Checks for other queries\n  @while $_i <= length($queries) {\n    $_key: nth($queries, $_i);\n\n    @if $_key and $_length - $_i >= 1 {\n      $_val: nth($queries, $_i + 1);\n      $_return: map-merge($_return, (#{$_key}: $_val));\n      $queries: set-nth($queries, $_i, null);\n      $queries: set-nth($queries, $_i + 1, null);\n    }\n\n    @else if $_key {\n      @warn unquote('\"Mappy Breakpoints is missing value for media feature \"#{$_key}\"\"');\n    }\n    $_i: $_i + 1;\n  }\n  @return $_return;\n}\n\n// Mappy Validate [Function]\n// -------------------------\n// Checks if $query given is one of the following:\n// 1) Is a $key in the $breakpoints map\n// 2) Is a number\n// 3) Is a \"max\", \"max-width\" or \"max-height\" string\n@function mappy-validate($query, $breakpoints) {\n  $_return: null;\n\n  @if map-has-key($breakpoints, $query) {\n    $_return: map-get($breakpoints, $query);\n  }\n\n  @else if type-of($query) == number {\n    $_return: $query;\n  }\n\n  @else if $query == \"max\" or $query == \"max-height\" or $query == \"max-width\" {\n    $_return: 0;\n  }\n\n  @else {\n    $_return: null;\n  }\n  @return $_return;\n}\n\n// Mappy Convert To Em [Function]\n// -------------------------------\n// Checks and converts px values to em. Leave other units untouched.\n\n@function mappy-convert-to-em($val) {\n  @if unit($val) == \"px\" or $val == 0 {\n    @return mappy-em($val);\n  } @else if unit($val) == \"em\" {\n    @return $val;\n  } @else if unit($val) == \"rem\" {\n    @return mappy-strip-unit($val) * 1em;\n  } @else {\n    @error unquote(\"Breakpoint value must have a unit if it's a number\");\n  }\n}\n\n// Mappy Em [Function]\n// --------------------\n// Converts pixels to em with $base-font-size\n// - https://gist.github.com/ijy/1441967\n@function mappy-em($target, $context: 16px) {\n  @if $target == 0 {\n    @return 0;\n  }\n  @return $target / $context * 1em;\n}\n\n@function mappy-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n// Implode [Function]\n// --------------------\n// Implode a list into a string\n@function implode($list, $glue: ' ') {\n  $res: null;\n  $len: length($list);\n\n  @for $i from 1 through $len {\n    $e: nth($list, $i);\n    @if $i == $len {\n      $res: unquote(\"#{$res}#{$e}\");\n    }\n    @else {\n      $res: unquote(\"#{$res}#{$e}#{$glue}\");\n    }\n  }\n\n  @return $res;\n}\n","h1 {\n  @include font(header1);\n\n  color: palette(blue);\n  margin-top: vr(1);\n  margin-bottom: vr(0.5);\n}\n\nh2 {\n  @include font(header2);\n\n  color: palette(blue);\n  margin-top: vr(1);\n  margin-bottom: vr(0.5);\n}\n\nh3 {\n  @include font(header3);\n\n  color: palette(gray);\n  margin-top: vr(1);\n  margin-bottom: vr(0.5);\n}\n\nh4, h5, h6 {\n  @include font(header4);\n\n  color: palette(gray);\n  margin-top: vr(0.5);\n  margin-bottom: vr(0.5);\n}\n\np {\n  margin-top: vr(0.5);\n  margin-bottom: vr(0.5);\n\n  img {\n    max-width: 100%;\n  }\n}\n\na {\n  @include link-underline(pink);\n}\n\nblockquote {\n  @include font(large);\n\n  color: palette(orange);\n  margin-top: vr(1.5);\n  margin-bottom: vr(1.5);\n\n  &:before,\n  &:after {\n    content: \"\";\n    background-color: palette(gray, light);\n    width: vr(6);\n    height: 1px;\n    display: block;\n    z-index: 10;\n  }\n\n  p {\n    margin-right: 0;\n    margin-left: 0;\n  }\n\n  cite,\n  small {\n    display: block;\n  }\n\n  em,\n  i,\n  cite {\n    font-style: normal;\n  }\n}\n\nul,\nol {\n  padding-left: 1.25em;\n  margin-bottom: vr(0.5);\n}\n\nul {\n  list-style: disc;\n}\n\nol {\n  list-style: decimal;\n}\n\nli > ul,\nli > ol {\n  padding-bottom: 0;\n}\n\ndl {\n  margin-top: vr(0.5);\n  margin-bottom: vr(0.5);\n}\n\ndt {\n  font-weight: 700;\n}\n\ndd {\n  margin-top: vr(0.5);\n  margin-bottom: vr(0.5);\n}\n\nimg {\n  height: auto;\n\n  /* Make sure images are scaled correctly. */\n  vertical-align: middle;\n}\n\n.gallery {\n  clear: both;\n}\n\ntable,\nth,\ntd {\n  border: 1px solid palette(gray, light);\n}\n\nth {\n  background-color: palette(gray, lighter);\n}\n\ntable {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  margin-top: vr(0.5);\n  margin-bottom: vr(0.5);\n  table-layout: fixed;\n\n  /* Prevents HTML tables from becoming too wide */\n  width: 100%;\n}\n\ncaption,\nth,\ntd {\n  font-weight: normal;\n  text-align: left;\n}\n\nth {\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n\ntd {\n  border-width: 0 1px 1px 0;\n}\n\nth,\ntd {\n  padding: 0.4375em;\n}\n","// ==== ANIMATION ==== //\n\n// Define transitions here.\n\n$anim-s: 0.15s cubic-bezier(0, 0, 0.2, 1);\n$anim-m: 0.3s cubic-bezier(0, 0, 0.2, 1);\n$anim-l: 0.45s cubic-bezier(0, 0, 0.2, 1);\n"]}